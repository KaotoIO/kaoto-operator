name: Build And Push

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      latest:
        required: true
        type: boolean
      standalone-image:
        required: true
        type: string
      olm:
        required: true
        type: boolean
      tag:
        required: true
        type: string
    secrets:
      registry:
        required: true
      registry-username:
        required: true
      registry-password:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
      - name: "Set up Go"
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: "Build"
        env:
          KAOTO_STANDALONE_IMAGE: ${{ inputs.standalone-image }}
        run: make build
      - name: "Test"
        run: make test
  publish:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Set up Go"
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: "Login to Container registry"
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.registry }}
          username: ${{ secrets.registry-username }}
          password: ${{ secrets.registry-password }}      
      - name: Set versions
        run: |
          export INPUT_VERSION="${{ inputs.version }}"
          export C_VERSION="${INPUT_VERSION#v}"

          echo "VERSION=${C_VERSION}" >> $GITHUB_ENV
          echo "IMG_VERSION=${C_VERSION}" >> $GITHUB_ENV
      - name: "Build Container image"
        run: |
          make docker-build
          make docker-push
      - name: "Tag lates Container image"
        if: ${{ inputs.latest }}
        run: |
          docker tag quay.io/kaotoio/kaoto-operator:${VERSION} quay.io/kaotoio/kaoto-operator:latest
          docker push quay.io/kaotoio/kaoto-operator:latest
      - name: "Build OLM bundle"
        if: ${{ inputs.olm }}
        run: |
          make bundle
          make bundle-build
          make bundle-push
          make catalog-build
          make catalog-push
