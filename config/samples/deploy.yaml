---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: designer
    app.kubernetes.io/instance: kaoto-sample
    app.kubernetes.io/managed-by: kaoto-operator
    app.kubernetes.io/name: kaoto
    app.kubernetes.io/part-of: kaoto
  name: kaoto-sample
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: designer
      app.kubernetes.io/instance: kaoto-sample
      app.kubernetes.io/managed-by: kaoto-operator
      app.kubernetes.io/name: kaoto
      app.kubernetes.io/part-of: kaoto
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: designer
        app.kubernetes.io/instance: kaoto-sample
        app.kubernetes.io/managed-by: kaoto-operator
        app.kubernetes.io/name: kaoto
        app.kubernetes.io/part-of: kaoto
    spec:
      containers:
        - env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: QUARKUS_LOG_LEVEL
              value: DEBUG
          image: docker.io/kaotoio/standalone:main
          imagePullPolicy: Always
          name: standalone
          ports:
            - containerPort: 8081
              name: http
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: designer
    app.kubernetes.io/instance: kaoto-sample
    app.kubernetes.io/managed-by: kaoto-operator
    app.kubernetes.io/name: kaoto
    app.kubernetes.io/part-of: kaoto
  name: kaoto-sample
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8081
  selector:
    app.kubernetes.io/instance: kaoto-sample
    app.kubernetes.io/name: kaoto
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
  labels:
    app.kubernetes.io/component: designer
    app.kubernetes.io/instance: kaoto-sample
    app.kubernetes.io/managed-by: kaoto-operator
    app.kubernetes.io/name: kaoto
    app.kubernetes.io/part-of: kaoto
  name: kaoto-sample
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - backend:
              service:
                name: kaoto-sample
                port:
                  name: http
            path: /kaoto-sample(/|$)(.*)
            pathType: Prefix